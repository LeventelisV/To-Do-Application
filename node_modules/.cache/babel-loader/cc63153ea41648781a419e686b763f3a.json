{"ast":null,"code":"import _objectSpread from \"/Users/vaggelis/Documents/react/reacttodoapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/vaggelis/Documents/react/reacttodoapp/src/ComponentsReactRedux/App.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ToDoList from \"./ToDoList\";\nimport UserInput from \"./UserInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.clear();\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"AddItem\") {\n    // return { ...state, items: [ ...state.items, action.item  ] };\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: state.items.concat(action.item)\n    });\n  }\n\n  if (action.type === \"DeleteItem\") {\n    // let index = state.items.indexOf(action.item);\n    // let newState = { ...state };\n    // newState.items.splice(index, 1);\n    // return newState;\n    var newItems = state.items.filter(function (item) {\n      return item.id !== action.item.id;\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: newItems\n    });\n  } //create action.type=\"Toggle\"\n\n\n  if (action.type === \"Toggle\") {\n    //find the item into items[]\n    var _newItems = state.items.map(function (item) {\n      if (item.id === action.item.id) {\n        item.done = !item.done;\n      }\n\n      return item;\n    });\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: _newItems\n    });\n  }\n\n  return state;\n}\n\nvar store = createStore(reducer);\n\nfunction ShowItems() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Show All \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ShowItems;\nexport default function App() {\n  console.log(\"-App\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App text-center\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(ShowItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowItems\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/vaggelis/Documents/react/reacttodoapp/src/ComponentsReactRedux/App.jsx"],"names":["React","useRef","useState","createStore","Provider","ToDoList","UserInput","console","clear","reducer","state","items","action","type","concat","item","newItems","filter","id","map","done","store","ShowItems","App","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACAC,OAAO,CAACC,KAAR;;AAEA,SAASC,OAAT,GAAgD;AAAA,MAA/BC,KAA+B,uEAAvB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAuB;AAAA,MAARC,MAAQ;;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B;AACA,2CAAYH,KAAZ;AAAmBC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYG,MAAZ,CAAmBF,MAAM,CAACG,IAA1B;AAA1B;AACD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC;AACA;AACA;AACA;AACA,QAAMG,QAAQ,GAAGN,KAAK,CAACC,KAAN,CAAYM,MAAZ,CAAmB,UAACF,IAAD;AAAA,aAAUA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACG,IAAP,CAAYG,EAAlC;AAAA,KAAnB,CAAjB;AACA,2CAAYR,KAAZ;AAAmBC,MAAAA,KAAK,EAAEK;AAA1B;AACD,GAZ6C,CAa9C;;;AACA,MAAIJ,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AAEA,QAAMG,SAAQ,GAAGN,KAAK,CAACC,KAAN,CAAYQ,GAAZ,CAAgB,UAACJ,IAAD,EAAU;AACzC,UAAIA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACG,IAAP,CAAYG,EAA5B,EAAgC;AAC9BH,QAAAA,IAAI,CAACK,IAAL,GAAY,CAACL,IAAI,CAACK,IAAlB;AACD;;AACD,aAAOL,IAAP;AACD,KALgB,CAAjB;;AAMA,2CAAYL,KAAZ;AAAmBC,MAAAA,KAAK,EAAEK;AAA1B;AACD;;AACD,SAAON,KAAP;AACD;;AAED,IAAMW,KAAK,GAAGlB,WAAW,CAACM,OAAD,CAAzB;;AAEA,SAASa,SAAT,GAAqB;AACnB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;KAPQA,S;AAST,eAAe,SAASC,GAAT,GAAe;AAC5BhB,EAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAA,8BAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;MAZuBE,G","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ToDoList from \"./ToDoList\";\nimport UserInput from \"./UserInput\";\nconsole.clear();\n\nfunction reducer(state = { items: [] }, action) {\n  if (action.type === \"AddItem\") {\n    // return { ...state, items: [ ...state.items, action.item  ] };\n    return { ...state, items: state.items.concat(action.item) };\n  }\n  if (action.type === \"DeleteItem\") {\n    // let index = state.items.indexOf(action.item);\n    // let newState = { ...state };\n    // newState.items.splice(index, 1);\n    // return newState;\n    const newItems = state.items.filter((item) => item.id !== action.item.id);\n    return { ...state, items: newItems };\n  }\n  //create action.type=\"Toggle\"\n  if (action.type === \"Toggle\") {\n    //find the item into items[]\n\n    const newItems = state.items.map((item) => {\n      if (item.id === action.item.id) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n    return { ...state, items: newItems };\n  }\n  return state;\n}\n\nconst store = createStore(reducer);\n\nfunction ShowItems() {\n  return (\n    <>\n      <label>Show All </label>\n      <input type=\"checkbox\" />\n    </>\n  );\n}\n\nexport default function App() {\n  console.log(\"-App\");\n  return (\n    <div className=\"App text-center\">\n      <Provider store={store}>\n        {/* <ItemStatus /> */}\n        <ShowItems />\n        <UserInput />\n        <ToDoList />\n      </Provider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}