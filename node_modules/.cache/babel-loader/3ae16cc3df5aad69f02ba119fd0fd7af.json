{"ast":null,"code":"var _jsxFileName = \"/Users/vaggelis/Documents/react/reacttodoapp/src/ComponentsReactRedux/ToDoList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport ToDoItem from \"./ToDoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n\n  var _this = this;\n\n  console.log(\"--ToDoList\");\n  var items = useSelector(function (newState) {\n    console.log(\"ToDoList::useSelector\");\n    return newState.items;\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(ToDoItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoList, \"tY2Gvv5VcC5OmHFNMSHq17tjIN8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/vaggelis/Documents/react/reacttodoapp/src/ComponentsReactRedux/ToDoList.jsx"],"names":["useSelector","ToDoItem","ToDoList","console","log","items","newState","map","item","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAAC,UAACM,QAAD,EAAc;AACpCH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAOE,QAAQ,CAACD,KAAhB;AACH,GAHwB,CAAzB;AAIA,sBACI;AAAA,cACKA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAU;AACjB,0BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,KAJA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjBuBP,Q;UAGNF,W;;;KAHME,Q","sourcesContent":["import { useSelector } from \"react-redux\";\nimport ToDoItem from \"./ToDoItem\"\n\nexport default function ToDoList() {\n    console.log(\"--ToDoList\")\n\n    const items = useSelector((newState) => {\n        console.log(\"ToDoList::useSelector\")\n        return newState.items;\n    })\n    return (\n        <ul>\n            {items.map((item) => {\n                return (\n                    <ToDoItem item={item} key={item.id} />\n                );\n            })}\n        </ul>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}